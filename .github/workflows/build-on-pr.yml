# This is a basic workflow to help you get started with Actions

name: build-ESP32

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BOARD_NAME: esp32

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zephyrprojectrtos/ci

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            /root/.espressif
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app/west.yml') }}

      - name: Initialize workspace (west init)
        run: west init -l app

      - name: Update modules (west update)
        run: west update

      - name: Install xtensa toolchain
        run: west espressif install

      - name: West build
        run: |
          export ZEPHYR_TOOLCHAIN_VARIANT="espressif"
          export ESPRESSIF_TOOLCHAIN_PATH="${HOME}/.espressif/tools/zephyr"
          west build -p -b ${{ env.BOARD_NAME }} app

      - name: Copy build files
        run: |
          cp build/esp-idf/build/bootloader/bootloader.bin bootloader.bin
          cp build/esp-idf/build/partitions_singleapp.bin partitions_singleapp.bin
          cp build/zephyr/zephyr.bin zephyr.bin

      - name: Get short commit hash
        id: commit_sha
        run: echo "::set-output name=short::$(git rev-parse --short HEAD)"

      - name: Upload a Build Artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: build-${{ steps.commit_sha.outputs.short }}
          path: |
            bootloader.bin
            partitions_singleapp.bin
            zephyr.bin
            flash.ps1
            flash.sh
            *.md

